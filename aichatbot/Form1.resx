<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAvIAAAHcCAYAAAC01U6XAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vgAADr4B6kKxwAAAC01JREFUeF7t3c2r5nUZx/HBZioGB0bDGkJo0SIQW1UUKD0serCaNkFBurAi0IIg
        iP6AooVCkriQZuEDVGAbU5AoXSRWkFlYDVhapllRQ9qEQ0E42ueGS7j58jUbPefM/bvu1wve/8H1hQ9n
        zpzfvr20/w1Xvj59OH0xHUv3pF+lP6d/p+ckSdLi+1f6U/plujvdmL6QLksX1CwANlke68H06XRbeiLN
        HrskSdquHk3fTFfUZAA2RR7mO9JN6VSaPWBJkqRVJ9MN6aKaEcBeywM8N12dHkyzhypJkvS/+lG6PL2q
        5gWw2/LgPpKeTLNHKUmSdCY9lt5ZMwPYDXlkh9O369FJkiTtVM+mr6VX1uwAdkoe1qXpL2n2+CRJknai
        4+lNNT+AlyOPaX/6ajqdZg9OkiRpJ1v9OcuraooAL0Ue0aH0w3pUkiRJe9mt6UDNEuD/lYdzJK3+eWv2
        sCRJkvai+9J5NU+AF5MHs/oi6+rjDbMHJUmStJc9lF5TMwV4IauHkn5bD0eSJGkTWn235lDNFWCUB3Iw
        PVAPRpIkaZO6tyYLMMoDuW14MJIkSZvU9TVbgOflYXxyeCiSJEmb2AdrvgB5EG8cHogkSdKmdjIdqRkD
        2y2P4Z61xyFJkrTp3VozBrZXHsLR4WFIkiQtobfXnIHtlEfw++FRSJIkLaH7a87A9skD8B9cJUnSknt/
        zRrYHjn8c9Ijaw9BkiRpaf24pg1sjxz+x4eHIEmStMQuqXkD2yFH/73hEUiSJC2xb9S8gf5y8OelZ9Ye
        gCRJ0lJ7Kh2omQO95dg/u3b8kiRJS8/XXtkOOfY7h+OXJElactfXzIHecuxPD8cvSZK05H5eMwf6yqG/
        eTh8SZKkpXc6Haq5Az3lyD+zdvSSJEldenfNHegpR37dcPSSJEkdurrmDvSUI/f34yVJUse+XnMHesqR
        PzIcvSRJUofuqrkDPeXITwxHL0mS1KGf1tyBnnLkp4ajlyRJ6tDDNXegp8nRS5IkdehEzR3oaXL0kiRJ
        HTpVcwd6mhy9JElShwx5epscvSRJUocMeXqbHL0kSVKHDHl6mxy9JElShwx5epscvSRJUocMeXqbHL0k
        SVKHDHl6mxy9JElShwx5epscvSRJUocMeXqbHL0kSVKHDHl6mxy9JElShwx5epscvSRJUocMeXqbHL0k
        SVKHDHl6mxy9JElShwx5epscvSRJUocMeXqbHL0kSVKHDHl6mxy9JElShwx5epscvSRJUocMeXqbHL0k
        SVKHDHl6mxy9JElShwx5epscvSRJUocMeXqbHL0kSVKHDHl6mxy9JElShwx5epscvSRJUocMeXqbHL0k
        SVKHDHl6mxy9JElShwx5epscvSRJUocMeXqbHL0kSVKHDHl6mxy9JElShwx5epscvSRJUocMeXqbHL0k
        SVKHDHl6mxy9JElShwx5epscvSRJUocMeXqbHL0kSVKHDHl6mxy9JElShwx5epscvSRJUocMeXqbHL0k
        SVKHDHl6mxy9JElShwx5epscvSRJUocMeXqbHL0kSVKHDHl6mxy9JElShwx5epscvSRJUocMeXqbHL0k
        SVKHDHl6y5H/Zzh6SZKkDj1Zcwd6ypE/NRy9JElShx6vuQM95cifGI5ekiSpQ8dr7kBPqyMfjl6SJKlD
        99XcgZ5y5N8djl6SJKlDN9fcgZ5y5NcMRy9JktShL9XcgZ5y5FcORy9JktShozV3oKcc+UXD0UuSJHXo
        /Jo70FcO/e/D4UuSJC2539TMgd5y7HcMxy9JkrTkjtXMgd5y7J8bjl+SJGnJfbRmDvSWY39dembt+CVJ
        kpba0+lAzRzoLwf//bUHIEmStNT8/Xi2S47+8uERSJIkLbF31byB7ZCj358eW3sEkiRJS+sXNW1gu+T4
        rxoegyRJ0pK6rGYNbJ88gD8OD0KSJGkJ3V9zBrZTHsHHhkchSZK0hN5Wcwa2Vx7CvcPDkCRJ2uRuqhkD
        2y2P4eLhcUiSJG1qJ9Nra8YAeRCfX3sgkiRJm9oHar4Az8vDuGt4KJIkSZvUtTVbgHV5HIfTr9ceiyRJ
        0qb0g5oswEweyQXp4bVHI0mSdLZ7MB2suQK8kDyUC9Pj9XAkSZLOZqsfMJ5fMwV4MXkwR9LxekCSJEln
        o58lIx7OVB7OofSTekiSJEl72d3p1TVLgDOVB3QgXVcPSpIkabc7nb6cXlFzBHg58pg+lFYfYJg9OEmS
        pJ3or+nSmh/ATsnDWv3e/LfqoUmSJO1Uz6Zj6XDNDmA35JG9Jz2UZg9RkiTpTHogvbVmBrDb8uDOSZ9I
        Br0kSXoprQb80ZoWwNmweoTplvTPNHuokiRJq06kG9P7akYAmyIP873phvS3NHvAkiRpu/pDujZdUnMB
        2HR5sG9Jn0rXpNvT6qMOjyY/uZckqVf/SL9Lq+/PfCd9JV2RLq5ZAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAMLdv338B/GlpARJddxIAAAAASUVORK5CYII=
</value>
  </data>
</root>